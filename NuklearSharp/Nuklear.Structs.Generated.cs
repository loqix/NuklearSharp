// Generated by Sichem at 2/4/2018 7:46:29 PM

using System;
using System.Runtime.InteropServices;

namespace NuklearSharp
{
	unsafe partial class Nuklear
	{
		[StructLayout(LayoutKind.Sequential)]
		public struct nk_color
		{
			public byte r;
			public byte g;
			public byte b;
			public byte a;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_colorf
		{
			public float r;
			public float g;
			public float b;
			public float a;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_vec2
		{
			public float x;
			public float y;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_vec2i
		{
			public short x;
			public short y;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_rect
		{
			public float x;
			public float y;
			public float w;
			public float h;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_recti
		{
			public short x;
			public short y;
			public short w;
			public short h;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_draw_null_texture
		{
			public nk_handle texture;
			public nk_vec2 uv;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_font_glyph
		{
			public char codepoint;
			public float xadvance;
			public float x0;
			public float y0;
			public float x1;
			public float y1;
			public float w;
			public float h;
			public float u0;
			public float v0;
			public float u1;
			public float v1;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_buffer_marker
		{
			public int active;
			public ulong offset;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_memory
		{
			public void* ptr;
			public ulong size;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_text_undo_record
		{
			public int where;
			public short insert_length;
			public short delete_length;
			public short char_storage;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_command
		{
			public int type;
			public ulong next;
			public nk_handle userdata;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_mouse_button
		{
			public int down;
			public uint clicked;
			public nk_vec2 clicked_pos;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_key
		{
			public int down;
			public uint clicked;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_draw_vertex_layout_element
		{
			public int attribute;
			public int format;
			public ulong offset;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_draw_command
		{
			public uint elem_count;
			public nk_rect clip_rect;
			public nk_handle texture;
			public nk_handle userdata;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct conv
		{
			public uint i;
			public float f;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_rp_rect
		{
			public int id;
			public ushort w;
			public ushort h;
			public ushort x;
			public ushort y;
			public int was_packed;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_rp_node
		{
			public ushort x;
			public ushort y;
			public nk_rp_node* next;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_rp__findresult
		{
			public int x;
			public int y;
			public nk_rp_node** prev_link;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_tt_bakedchar
		{
			public ushort x0;
			public ushort y0;
			public ushort x1;
			public ushort y1;
			public float xoff;
			public float yoff;
			public float xadvance;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_tt_aligned_quad
		{
			public float x0;
			public float y0;
			public float s0;
			public float t0;
			public float x1;
			public float y1;
			public float s1;
			public float t1;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_tt_packedchar
		{
			public ushort x0;
			public ushort y0;
			public ushort x1;
			public ushort y1;
			public float xoff;
			public float yoff;
			public float xadvance;
			public float xoff2;
			public float yoff2;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_tt_pack_range
		{
			public float font_size;
			public int first_unicode_codepoint_in_range;
			public int* array_of_unicode_codepoints;
			public int num_chars;
			public nk_tt_packedchar* chardata_for_range;
			public byte h_oversample;
			public byte v_oversample;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_tt_pack_context
		{
			public void* pack_info;
			public int width;
			public int height;
			public int stride_in_bytes;
			public int padding;
			public uint h_oversample;
			public uint v_oversample;
			public byte* pixels;
			public void* nodes;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_tt_fontinfo
		{
			public byte* data;
			public int fontstart;
			public int numGlyphs;
			public int loca;
			public int head;
			public int glyf;
			public int hhea;
			public int hmtx;
			public int kern;
			public int index_map;
			public int indexToLocFormat;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_tt_vertex
		{
			public short x;
			public short y;
			public short cx;
			public short cy;
			public byte type;
			public byte padding;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_tt__bitmap
		{
			public int w;
			public int h;
			public int stride;
			public byte* pixels;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_tt__hheap_chunk
		{
			public nk_tt__hheap_chunk* next;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_tt__hheap
		{

			public nk_tt__hheap_chunk* head;
			public void* first_free;
			public int num_remaining_in_head_chunk;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_tt__edge
		{
			public float x0;
			public float y0;
			public float x1;
			public float y1;
			public int invert;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_tt__active_edge
		{
			public nk_tt__active_edge* next;
			public float fx;
			public float fdx;
			public float fdy;
			public float direction;
			public float sy;
			public float ey;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_tt__point
		{
			public float x;
			public float y;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_font_bake_data
		{
			public nk_tt_fontinfo info;
			public nk_rp_rect* rects;
			public nk_tt_pack_range* ranges;
			public uint range_count;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_font_baker
		{

			public nk_tt_pack_context spc;
			public nk_font_bake_data* build;
			public nk_tt_packedchar* packed_chars;
			public nk_rp_rect* rects;
			public nk_tt_pack_range* ranges;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_text_find
		{
			public float x;
			public float y;
			public float height;
			public int first_char;
			public int length;
			public int prev_first;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_text_edit_row
		{
			public float x0;
			public float x1;
			public float baseline_y_delta;
			public float ymin;
			public float ymax;
			public int num_chars;
		}

		[StructLayout(LayoutKind.Sequential)]
		public struct nk_text
		{
			public nk_vec2 padding;
			public nk_color background;
			public nk_color text;
		}
	}
}
